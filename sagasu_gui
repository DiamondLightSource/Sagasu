#!/usr/bin/env python3

"""
Created on Mon Mar 30 16:56:12 2020

@author: Christian M. Orr
"""
import os
from shutil import move
from tempfile import mkstemp
from os import remove
from tkinter import Tk, Label, Entry, Button
os.system("module load mx")
os.system("module load global/cluster")
path = os.getcwd()

def replace(file_path, pattern, subst):
    file_path = os.path.abspath(file_path)
    fh, abs_path = mkstemp()
    new_file = open(abs_path,'w')
    old_file = open(file_path)
    for line in old_file:
        new_file.write(subst if pattern in line else line)
    new_file.close()
    old_file.close()
    remove(file_path)
    move(abs_path, file_path)
    
def click():
    lowres=int((1 + (10 * float(lowresIn.get()))))
    highres=int((10 * float(highresIn.get())))
    lowsites=int(lowsitesIn.get())
    highsites=int(highsitesIn.get())
    ntry=int(ntryIn.get())
    fa_path=fa_pathIn.get()
    projname=projnameIn.get()
    clust=str(clustIn.get())
    clust = clust.lower
    l2 = (lowres - 1) / 10
    h2 = highres / 10
    hklin = os.path.join(fa_path, projname+"_fa.hkl")
    insin = os.path.join(fa_path, projname+"_fa.ins")
    
    print("You have chosen the project name "+projname+" in location "+fa_path)
    print("")
    if clust == 'l':
        print("This will run the grid search on this machine between "+str(l2)+"A and "+str(h2)+"A. The site range is between "+str(lowsites)+" and "+str(highsites)+". As you are running on a local machine, this search may take quite a long time")
    if clust == 'c':       
        print("This will run the grid search on the Diamond cluster between "+str(l2)+"A and "+str(h2)+"A. The site range is between "+str(lowsites)+" and "+str(highsites)+". Please open another terminal to check on the queue status - 'qstat'")
    print("")
            
            #write shelx job file
    shelxjob = open("shelxd_job.sh","w")
    shelxjob.write("module load shelx\n")
    shelxjob.write("shelxd "+projname+"_fa")
    shelxjob.close()
    os.chmod('shelxd_job.sh', 0o775)
    
    os.system("mkdir "+path+"/"+projname)
    for i in range(highres, lowres):
        os.system("mkdir "+projname+"/"+str(i))
        i2 = (i/10)
        for j in range(lowsites, highsites):
            os.system("mkdir "+projname+"/"+str(i)+"/"+str(j))
            os.system("cp "+insin+" ./"+projname+"/"+str(i)+"/"+str(j))
            os.system("cp "+hklin+" ./"+projname+"/"+str(i)+"/"+str(j))
            os.system("cp shelxd_job.sh "+" ./"+projname+"/"+str(i)+"/"+str(j))
            workpath = os.path.join(path, projname+"/"+str(i)+"/"+str(j))
            f = os.path.join(path, projname+"/"+str(i)+"/"+str(j)+"/"+projname+"_fa.ins")
            replace(f, "FIND", "FIND "+str(j)+"\n")
            replace(f, "SHEL", "SHEL 999 "+str(i2)+"\n")
            replace(f, "NTRY", "NTRY "+str(ntry)+"\n")
            if clust == 'l':
                print("""
                      Running on local machine, this may take some time...
                      """)
                os.system("cd "+workpath+"; ./shelxd_job.sh")
            elif clust == 'c':
                print("""
                         Submitting to the cluster, please run 'watch qstat' in another terminal to check on progress
                         """)
                os.system("cd "+workpath+"; qsub -P i23 -q low.q -l h_vmem=8G -pe smp 20 -cwd ./shelxd_job.sh")

###############################################################################

root = Tk()
root.title("Sagasu - A SHELXD Grid Runner")
root.configure(background="white")

prognameTxt = Label(root, text="Sagasu", bg="white", fg="black")
lowresTxt = Label(root, text="Low res: ", bg="white", fg="black")
lowresIn = Entry(root, width=4, bg="green")
highresTxt = Label(root, text="High res: ", bg="white", fg="black")
highresIn = Entry(root, width=4, bg="green")
lowsitesTxt = Label(root, text="Low sites: ", bg="white", fg="black")
lowsitesIn = Entry(root, width=4, bg="green")
highsitesTxt = Label(root, text="High sites: ", bg="white", fg="black")
highsitesIn = Entry(root, width=4, bg="green")
ntryTxt = Label(root, text="Trys: ", bg="white", fg="black")
ntryIn = Entry(root, width=7, bg="green")
fa_pathTxt = Label(root, text="Project path: ", bg="white", fg="black")
fa_pathIn = Entry(root, width=40, bg="green")
projnameTxt = Label(root, text="Project name: ", bg="white", fg="black")
projnameIn = Entry(root, width=10, bg="green")
clustTxt = Label(root, text="(c)luster or (l)ocal: ", bg="white", fg="black")
clustIn = Entry(root, width=10, bg="green")

submitButton = Button(root, text="Run grid search", width=15, command=click)

# =============================================================================
# lowres = int((1 + (10 * float(input("Low resolution cutoff for grid: ")))))
# l2 = (lowres - 1) / 10
# highres = int((10 * float(input("High resolution cutoff for grid: "))))
# h2 = highres / 10
# lowsites = int(input("Minimum number of sites to search: "))
# highsites = int(input("Maximum number of sites to search: "))
# projname = ("wg99") #input("Name of project (SHELX prefix): ")
# fa_path = ("/dls/i23/data/2020/nr23571-55/processing/wg99/xscale_9") #input("Path to SHELXC outputs: ")
# clust = (str(input("Run on (c)luster or (l)ocal machine? ")))
# clust = clust.lower()
# ntry = int(input("Number of trials: "))
# hklin = os.path.join(fa_path, projname+"_fa.hkl")
# insin = os.path.join(fa_path, projname+"_fa.ins")
# =============================================================================



prognameTxt.grid(row=0, column=0)
lowresTxt.grid(row=1, column=0)
lowresIn.grid(row=1,column=1,sticky="W")
highresTxt.grid(row=2, column=0)
highresIn.grid(row=2,column=1,sticky="W")
lowsitesTxt.grid(row=3, column=0)
lowsitesIn.grid(row=3,column=1,sticky="W")
highsitesTxt.grid(row=4, column=0)
highsitesIn.grid(row=4,column=1,sticky="W")
ntryTxt.grid(row=5, column=0)
ntryIn.grid(row=5,column=1,sticky="W")
fa_pathTxt.grid(row=6, column=0)
fa_pathIn.grid(row=6,column=1,sticky="W")
projnameTxt.grid(row=7, column=0)
projnameIn.grid(row=7,column=1,sticky="W")
clustTxt.grid(row=8, column=0)
clustIn.grid(row=8,column=1,sticky="W")


submitButton.grid(row=50,column=0)


root.mainloop()
